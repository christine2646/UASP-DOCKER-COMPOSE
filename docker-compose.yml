version: "3.9"

name: docker-compose

services:
  nginx:
    image: nginx:latest
    container_name: nginx-container
    ports:
      - "8080:80"
    volumes:
      - nginx-data:/etc/nginx
      - wordpress-data:/var/www/html
    configs:
      - source: nginx-config
        target: /etc/nginx/nginx.conf
    networks:
      - web-network
    depends_on:
      - wordpress
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 50M
          cpus: "0.5"
        reservations:
          memory: 30M
          cpus: "0.2"
      restart_policy:
        condition: on-failure

  mysql:
    image: mysql:5.7
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: wordpress
    networks:
      - web-network
    volumes:
      - mysql-data:/var/lib/mysql
    configs:
      - source: mysql-config
        target: /etc/mysql/my.cnf
    command: --default-authentication-plugin=mysql_native_password
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 100M
          cpus: "0.5"
        reservations:
          memory: 70M
          cpus: "0.3"
      restart_policy:
        condition: on-failure

  wordpress:
    image: wordpress:latest
    container_name: wordpress-container
    environment:
      WORDPRESS_DB_HOST: mysql:3306
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: rootpassword
    ports:
      - "8081:80"
    networks:
      - web-network
    volumes:
      - wordpress-data:/var/www/html
    depends_on:
      - mysql
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 100M
          cpus: "0.5"
        reservations:
          memory: 70M
          cpus: "0.3"
      restart_policy:
        condition: on-failure

networks:
  web-network:
    driver: bridge

volumes:
  nginx-data:
  mysql-data:
  wordpress-data:

configs:
  nginx-config:
    file: ./nginx.conf
  mysql-config:
    file: ./my.cnf
